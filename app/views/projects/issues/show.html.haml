- @content_class = "limit-container-width" unless fluid_layout
- add_to_breadcrumbs "Issues", project_issues_path(@project)
- breadcrumb_title @issue.to_reference
- page_title           "#{@issue.title} (#{@issue.to_reference})", "问题"
- page_description     @issue.description
- page_card_attributes @issue.card_attributes

- content_for :page_specific_javascripts do
  = webpack_bundle_tag 'common_vue'
  = webpack_bundle_tag 'notes'

- can_update_issue = can?(current_user, :update_issue, @issue)
- can_report_spam = @issue.submittable_as_spam_by?(current_user)

.detail-page-header
  .detail-page-header-body
    .issuable-status-box.status-box.status-box-closed{ class: issue_button_visibility(@issue, false) }
      = icon('check', class: "hidden-sm hidden-md hidden-lg")
      %span.hidden-xs
        已关闭
    .issuable-status-box.status-box.status-box-open{ class: issue_button_visibility(@issue, true) }
      = icon('circle-o', class: "hidden-sm hidden-md hidden-lg")
      %span.hidden-xs 未关闭

    .issuable-meta
      - if @issue.confidential
        .issuable-warning-icon.inline= sprite_icon('eye-slash', size: 16, css_class: 'icon')
      - if @issue.discussion_locked?
        .issuable-warning-icon.inline= sprite_icon('lock', size: 16, css_class: 'icon')
      = issuable_meta(@issue, @project, "问题")

    %a.btn.btn-default.pull-right.visible-xs-block.gutter-toggle.issuable-gutter-toggle.js-sidebar-toggle{ href: "#" }
      = icon('angle-double-left')

  .detail-page-header-actions.js-issuable-actions
    .clearfix.issue-btn-group.dropdown
      %button.btn.btn-default.pull-left.hidden-md.hidden-lg{ type: "button", data: { toggle: "dropdown" } }
        选项
        = icon('caret-down')
      .dropdown-menu.dropdown-menu-align-right.hidden-lg
        %ul
          - if can_update_issue
            %li= link_to '编辑', edit_project_issue_path(@project, @issue), class: 'issuable-edit'
          - unless current_user == @issue.author
            %li= link_to '违规举报', new_abuse_report_path(user_id: @issue.author.id, ref_url: issue_url(@issue))
          - if can_update_issue
            %li= link_to '关闭问题', issue_path(@issue, issue: { state_event: :close }, format: 'json'), class: "btn-close js-btn-issue-action #{issue_button_visibility(@issue, true)}", title: '关闭问题'
            %li= link_to '重新打开问题', issue_path(@issue, issue: { state_event: :reopen }, format: 'json'), class: "btn-reopen js-btn-issue-action #{issue_button_visibility(@issue, false)}", title: '重新打开问题'
          - if can_report_spam
            %li= link_to '提交为垃圾', mark_as_spam_project_issue_path(@project, @issue), method: :post, class: 'btn-spam', title: '提交为垃圾'
          - if can_update_issue || can_report_spam
            %li.divider
          %li= link_to '新建问题', new_project_issue_path(@project), title: '新建问题', id: 'new_issue_link'

    - if can_update_issue
      = link_to '编辑', edit_project_issue_path(@project, @issue), class: 'hidden-xs hidden-sm btn btn-grouped issuable-edit'

    = render 'shared/issuable/close_reopen_button', issuable: @issue, can_update: can_update_issue

    - if can_report_spam
      = link_to '提交为垃圾', mark_as_spam_project_issue_path(@project, @issue), method: :post, class: 'hidden-xs hidden-sm btn btn-grouped btn-spam', title: '提交为垃圾'
    = link_to new_project_issue_path(@project), class: 'hidden-xs hidden-sm btn btn-grouped new-issue-link btn-new btn-inverted', title: '新建问题', id: 'new_issue_link' do
      新建问题

.issue-details.issuable-details
  .detail-page-description.content-block
    %script#js-issuable-app-initial-data{ type: "application/json" }= issuable_initial_data(@issue)
    #js-issuable-app
      %h2.title= markdown_field(@issue, :title)
      - if @issue.description.present?
        .description{ class: can?(current_user, :update_issue, @issue) ? 'js-task-list-container' : '' }
          .wiki= markdown_field(@issue, :description)
          %textarea.hidden.js-task-list-field= @issue.description

      = edited_time_ago_with_tooltip(@issue, placement: 'bottom', html_class: 'issue-edited-ago js-issue-edited-ago')

    #merge-requests{ data: { url: referenced_merge_requests_project_issue_path(@project, @issue) } }
      // This element is filled in using JavaScript.

    #related-branches{ data: { url: related_branches_project_issue_path(@project, @issue) } }
      // This element is filled in using JavaScript.

  .content-block.emoji-block
    .row
      .col-sm-8.js-issue-note-awards
        = render 'award_emoji/awards_block', awardable: @issue, inline: true
      .col-sm-4.new-branch-col
        = render 'new_branch' unless @issue.confidential?

  %section.issuable-discussion
    = render 'projects/issues/discussion'

= render 'shared/issuable/sidebar', issuable: @issue

= page_specific_javascript_bundle_tag('common_vue')
= page_specific_javascript_bundle_tag('issue_show')
